library(dplyr)
library(readxl)
fpath <- "C:/Users/vom8/CDC/NIOSH-DSI-ETB - General/"
fname <- "ETB_Project_Tracker_2025-03-18.xlsx"
savepath <- "C:/Users/vom8/OneDrive - CDC/ETB/Project Tracker/"
# read in milestone tracker
wip1 <- read_excel(path=paste0(fpath, fname),sheet="Tracker WIP",col_name=T,
skip=3)
wip1$rownum <- seq(1:nrow(wip1))
# trim off gant chart, other columns
wip2 <- wip1[,c(1:12,62)]
# list of projects
projects <- wip2 %>% filter(is.na(Column1) & !is.na(`PROJECT MILESTONES`))
# find projects with no milestones
noMilestone <- vector(mode="numeric", length=nrow(projects))
for (kk in 2:nrow(projects)) {
current_rownum <- projects[kk,13]
previous_rownum <- projects[kk-1,13]
if(previous_rownum+1 == current_rownum) noMilestone[kk-1]=previous_rownum
}
noMilestone <- unlist(noMilestone)
projects2 <- projects %>% filter(!(rownum %in% noMilestone))
# remove last row ("DO NOT USE ROW"), remove project name rows
wip3 <- wip2[1:nrow(wip2)-1,] %>% filter(!is.na(Column1))
wip3$`PROJECT NAME` <- "NAMEHERE"
wip3$`PROJECT OFFICER` <- "OFFICERHERE"
# add project names, project officer to corresponding milestone rows
jj <- 0 #initialize project row counter
for (ii in 1:nrow(wip3)) {
if(wip3[ii,4]=="1") jj=jj+1
wip3[ii,14] = projects2[jj,5]
wip3[ii,15] = projects2[jj,7]
}
qc <- wip3 %>% select(Column1, `PROJECT NAME`)
# bring it all together
projects$`PROJECT NAME` <- projects$`PROJECT MILESTONES`
projects$`PROJECT OFFICER` <- projects$ASSIGNEE
wip4 <- rbind(wip3, projects) %>% arrange(rownum)
View(wip4)
#################################################
### QC shit
#################################################
qc <- wip4 %>% filter(STATUS=="Completed" & is.na(`ACTUAL DATE OF COMPLETION`))
#################################################
### QC shit
#################################################
qc <- wip4 %>% filter(STATUS=="Completed" & is.na(`ACTUAL
DATE OF COMPLETION`))
#################################################
### QC shit
#################################################
names(wip4)
names(wip2)
wip2 <- wip2 %>% rename(`ACTUAL DATE OF COMPLETION`=`ACTUAL \r\nDATE OF COMPLETION`,
`EXPECTED DATE OF COMPLETION`=`EXPECTED \r\nDATE OF COMPLETION`)
# list of projects
projects <- wip2 %>% filter(is.na(Column1) & !is.na(`PROJECT MILESTONES`))
# find projects with no milestones
noMilestone <- vector(mode="numeric", length=nrow(projects))
for (kk in 2:nrow(projects)) {
current_rownum <- projects[kk,13]
previous_rownum <- projects[kk-1,13]
if(previous_rownum+1 == current_rownum) noMilestone[kk-1]=previous_rownum
}
noMilestone <- unlist(noMilestone)
projects2 <- projects %>% filter(!(rownum %in% noMilestone))
# remove last row ("DO NOT USE ROW"), remove project name rows
wip3 <- wip2[1:nrow(wip2)-1,] %>% filter(!is.na(Column1))
wip3$`PROJECT NAME` <- "NAMEHERE"
wip3$`PROJECT OFFICER` <- "OFFICERHERE"
# add project names, project officer to corresponding milestone rows
jj <- 0 #initialize project row counter
for (ii in 1:nrow(wip3)) {
if(wip3[ii,4]=="1") jj=jj+1
wip3[ii,14] = projects2[jj,5]
wip3[ii,15] = projects2[jj,7]
}
qc <- wip3 %>% select(Column1, `PROJECT NAME`)
# bring it all together
projects$`PROJECT NAME` <- projects$`PROJECT MILESTONES`
projects$`PROJECT OFFICER` <- projects$ASSIGNEE
wip4 <- rbind(wip3, projects) %>% arrange(rownum)
#################################################
### QC shit
#################################################
names(wip4)
qc <- wip4 %>% filter(STATUS=="Completed" & is.na(`ACTUAL DATE OF COMPLETION`))
View(qc)
table(wip4$STATUS)
qc <- wip4 %>% filter(STATUS=="DSI OD Review" & is.na(`ACTUAL DATE OF COMPLETION`))
# this metric should probably be reported
qc <- wip4 %>% filter(STATUS=="Completed" & is.na(`ACTUAL DATE OF COMPLETION`))
qc <- wip4 %>% filter(STATUS=="DSI OD Review" & is.na(`ACTUAL DATE OF COMPLETION`))
qc <- wip4 %>% filter(STATUS=="DSI OD Review" & is.na(`ACTUAL DATE OF COMPLETION`) & !is.na(Column1))
qc <- wip4 %>% filter(STATUS=="NIOSH OD Review" & is.na(`ACTUAL DATE OF COMPLETION`) & !is.na(Column1))
qc <- wip4 %>% filter(STATUS=="In Progress" & is.na(`ACTUAL DATE OF COMPLETION`) & !is.na(Column1))
# add some metric stuff
wip4$indNoStartDate.Complete <- if_else(wip4$STATUS=="Completed" & is.na(`ACTUAL DATE OF COMPLETION`),
1,
0)
# add some metric stuff
wip4$indNoStartDate.Complete <- if_else(wip4$STATUS=="Completed" & is.na(wip4$`ACTUAL DATE OF COMPLETION`),
1,
0)
View(wip4)
# add some metric stuff
wip4$indNoStartDate.Complete <- if_else(wip4$STATUS=="Completed" & is.na(wip4$`ACTUAL DATE OF COMPLETION`),
1,
0,
0)
wip4$indNoStartDate <- if_else(is.na(wip4$`ACTUAL DATE OF COMPLETION`, 1, 0))
wip4$indNoStartDate <- if_else(is.na(wip4$`ACTUAL DATE OF COMPLETION`), 1, 0)
View(wip4)
wip4$indNoStartDate <- if_else(is.na(wip4$`START DATE`), 1, 0)
wip4 <- rbind(wip3, projects) %>% arrange(rownum)
# add some metric stuff
wip4$`EXPECTED WEEKS REMAINING` <- wip4$`EXPECTED DATE OF COMPLETION` - Sys.Date()
str(wip4)
# add some metric stuff
today <- Sys.Date()
str(today)
View(qc)
qc$`START DATE` <- as.Date(qc$`START DATE`)
str(qc$`START DATE`)
wip2$`START DATE` <- as.Date(wip2$`START DATE`)
wip2$`EXPECTED DATE OF COMPLETION` <- as.Date(wip2$`EXPECTED DATE OF COMPLETION`)
wip2$`ACTUAL DATE OF COMPLETION` <- as.Date(wip2$`ACTUAL DATE OF COMPLETION`)
str(wip2)
# list of projects
projects <- wip2 %>% filter(is.na(Column1) & !is.na(`PROJECT MILESTONES`))
# find projects with no milestones
noMilestone <- vector(mode="numeric", length=nrow(projects))
for (kk in 2:nrow(projects)) {
current_rownum <- projects[kk,13]
previous_rownum <- projects[kk-1,13]
if(previous_rownum+1 == current_rownum) noMilestone[kk-1]=previous_rownum
}
noMilestone <- unlist(noMilestone)
projects2 <- projects %>% filter(!(rownum %in% noMilestone))
# remove last row ("DO NOT USE ROW"), remove project name rows
wip3 <- wip2[1:nrow(wip2)-1,] %>% filter(!is.na(Column1))
wip3$`PROJECT NAME` <- "NAMEHERE"
wip3$`PROJECT OFFICER` <- "OFFICERHERE"
# add project names, project officer to corresponding milestone rows
jj <- 0 #initialize project row counter
for (ii in 1:nrow(wip3)) {
if(wip3[ii,4]=="1") jj=jj+1
wip3[ii,14] = projects2[jj,5]
wip3[ii,15] = projects2[jj,7]
}
qc <- wip3 %>% select(Column1, `PROJECT NAME`)
# bring it all together
projects$`PROJECT NAME` <- projects$`PROJECT MILESTONES`
projects$`PROJECT OFFICER` <- projects$ASSIGNEE
wip4 <- rbind(wip3, projects) %>% arrange(rownum)
wip4$`EXPECTED WEEKS REMAINING` <- wip4$`EXPECTED DATE OF COMPLETION` - Sys.Date()
wip4$`EXPECTED WEEKS REMAINING` <- (wip4$`EXPECTED DATE OF COMPLETION` - Sys.Date())/7
str(wip4$`EXPECTED WEEKS REMAINING`)
wip4$`EXPECTED WEEKS REMAINING` <- difftime(time1=wip4$`EXPECTED DATE OF COMPLETION`,
time2=Sys.Date(),
units="weeks")
wip4$`DURATION (# OF WEEKS)` <- if_else(is.na(wip4$`START DATE`), NA, wip4$`DURATION (# OF WEEKS)`)
# add some metric stuff
wip4$`EXPECTED WEEKS REMAINING` <- if_else(wip4$status!="Completed",
difftime(time1=wip4$`EXPECTED DATE OF COMPLETION`,
time2=Sys.Date(),
units="weeks"),
0)
# add some metric stuff
wip4$`EXPECTED WEEKS REMAINING` <- if_else(wip4$status!="Completed",
difftime(time1=wip4$`EXPECTED DATE OF COMPLETION`,
time2=Sys.Date(),
units="weeks"),
NA)
# add some metric stuff
wip4$`EXPECTED WEEKS REMAINING` <- if_else(wip4$STATUS!="Completed",
difftime(time1=wip4$`EXPECTED DATE OF COMPLETION`,
time2=Sys.Date(),
units="weeks"),
NA)
table(wip4$`PROJECT MILESTONES`)
unique(wip4$`PROJECT MILESTONES`)
library(stringr)
reviewMilestones <- str_extract_all(wip4$`PROJECT MILESTONES`,
pattern="\\review")
View(reviewMilestones)
str_view(string=wip4$`PROJECT MILESTONES`, pattern="review")
reviewMilestones <- str_extract_all(wip4$`PROJECT MILESTONES`,
pattern="review")
View(reviewMilestones)
qc <- unique(wip4$`PROJECT MILESTONES`)
qc <- data.frame(milestone=unique(wip4$`PROJECT MILESTONES`))
View(qc)
str_view(string=qc$milestone, pattern="review")
reviewMilestones <- c("Branch Final review",
"DSI OD review",
"NIOSH OD review",
"Draft paper completed and submitted to branch review",
"NIOSH OD review  completed")
qc$indReview <- if_else(qc$milestone %in% reviewMilestones, 1, 0)
View(qc)
wip4$indReview <- if_else(wip4$`PROJECT MILESTONES` %in% reviewMilestones, 1, 0)
View(wip4)
View(qc)
str_view(string=qc$milestone, pattern="Review")
wip4$indReview <- if_else(wip4$`PROJECT MILESTONES` %in% reviewMilestones | wip4$STATUS %in% c("NIOSH OD Review", "DSI OD Review"), 1, 0)
wip4$`WEEKS ELAPSED` <- difftime(time1=Sys.Date(),
time2=wip4$`START DATE`,
units="weeks")
wip4$`WEEKS ELAPSED` <- if_else(wip4$STATUS != "Completed",
difftime(time1=Sys.Date(),
time2=wip4$`START DATE`,
units="weeks"),
NA)
# save outputs
write.csv(wip4, file=paste0(savepath, "wip", Sys.Date(), ".csv"), row.names=F)
saveRDS(wip4, file=paste0(savepath, "wip", Sys.Date(), ".RDS"))
wip4$indReview <- if_else(wip4$`PROJECT MILESTONES` %in% reviewMilestones | wip4$STATUS %in% c("NIOSH OD Review", "DSI OD Review"), 1, 0)
reviewMilestones <- c("Branch Final review",
"DSI OD review",
"NIOSH OD review",
"Draft paper completed and submitted to branch review",
"NIOSH OD review  completed",
"Branch Review")
wip4$indReview <- if_else(wip4$`PROJECT MILESTONES` %in% reviewMilestones | wip4$STATUS %in% c("NIOSH OD Review", "DSI OD Review"), 1, 0)
fpath <- "C:/Users/vom8/CDC/NIOSH-DSI-ETB - General/"
fname <- "ETB_Project_Tracker_2025-03-18.xlsx"
savepath <- "C:/Users/vom8/OneDrive - CDC/ETB/Project Tracker/"
# read in milestone tracker
wip1 <- read_excel(path=paste0(fpath, fname),sheet="Tracker WIP",col_name=T,
skip=3)
fpath <- "C:/Users/vom8/CDC/NIOSH-DSI-ETB - General/"
fname <- "ETB_Project_Tracker_2025-03-18.xlsx"
savepath <- "C:/Users/vom8/OneDrive - CDC/ETB/Project Tracker/"
# read in milestone tracker
wip1 <- read_excel(path=paste0(fpath, fname),sheet="Tracker WIP",col_name=T,
skip=3)
wip1$rownum <- seq(1:nrow(wip1))
# trim off gant chart, other columns
wip2 <- wip1[,c(1:12,62)]
# fix names with special characters like new line, returns, etc.
# fix date formats
wip2 <- wip2 %>% rename(`ACTUAL DATE OF COMPLETION`=`ACTUAL \r\nDATE OF COMPLETION`,
`EXPECTED DATE OF COMPLETION`=`EXPECTED \r\nDATE OF COMPLETION`)
wip2$`START DATE` <- as.Date(wip2$`START DATE`)
wip2$`EXPECTED DATE OF COMPLETION` <- as.Date(wip2$`EXPECTED DATE OF COMPLETION`)
wip2$`ACTUAL DATE OF COMPLETION` <- as.Date(wip2$`ACTUAL DATE OF COMPLETION`)
# list of projects
projects <- wip2 %>% filter(is.na(Column1) & !is.na(`PROJECT MILESTONES`))
# find projects with no milestones
noMilestone <- vector(mode="numeric", length=nrow(projects))
for (kk in 2:nrow(projects)) {
current_rownum <- projects[kk,13]
previous_rownum <- projects[kk-1,13]
if(previous_rownum+1 == current_rownum) noMilestone[kk-1]=previous_rownum
}
noMilestone <- unlist(noMilestone)
projects2 <- projects %>% filter(!(rownum %in% noMilestone))
# remove last row ("DO NOT USE ROW"), remove project name rows
wip3 <- wip2[1:nrow(wip2)-1,] %>% filter(!is.na(Column1))
wip3$`PROJECT NAME` <- "NAMEHERE"
wip3$`PROJECT OFFICER` <- "OFFICERHERE"
# add project names, project officer to corresponding milestone rows
jj <- 0 #initialize project row counter
for (ii in 1:nrow(wip3)) {
if(wip3[ii,4]=="1") jj=jj+1
wip3[ii,14] = projects2[jj,5]
wip3[ii,15] = projects2[jj,7]
}
qc <- wip3 %>% select(Column1, `PROJECT NAME`)
# bring it all together
projects$`PROJECT NAME` <- projects$`PROJECT MILESTONES`
projects$`PROJECT OFFICER` <- projects$ASSIGNEE
wip4 <- rbind(wip3, projects) %>% arrange(rownum)
# add some metric stuff
wip4$`EXPECTED WEEKS REMAINING` <- if_else(wip4$STATUS!="Completed",
difftime(time1=wip4$`EXPECTED DATE OF COMPLETION`,
time2=Sys.Date(),
units="weeks"),
NA)
wip4$`DURATION (# OF WEEKS)` <- if_else(is.na(wip4$`START DATE`), NA, wip4$`DURATION (# OF WEEKS)`)
reviewMilestones <- c("Branch Final review",
"DSI OD review",
"NIOSH OD review",
"Draft paper completed and submitted to branch review",
"NIOSH OD review  completed",
"Branch Review")
wip4$indReview <- if_else(wip4$`PROJECT MILESTONES` %in% reviewMilestones | wip4$STATUS %in% c("NIOSH OD Review", "DSI OD Review"), 1, 0)
wip4$`WEEKS ELAPSED` <- if_else(wip4$STATUS != "Completed",
difftime(time1=Sys.Date(),
time2=wip4$`START DATE`,
units="weeks"),
NA)
# save outputs
write.csv(wip4, file=paste0(savepath, "wip", Sys.Date(), ".csv"), row.names=F)
saveRDS(wip4, file=paste0(savepath, "wip", Sys.Date(), ".RDS"))
